name: Deploy to Firebase Hosting on push and merge
on:
  push :
   branches: 
     main
env:
  gpgkey: ${{secrets.GPG_KEY}}

permissions:
 checks: write
 contents: read
 pull-requests: write
jobs:
    build:
        name: Building and updating docker images.
        permissions:
          id-token: write
          contents: read
        runs-on: ubuntu-latest
        steps:
          - name: Set-Up Go
            uses: actions/setup-go@v4
            with:
              go-version: '1.21.5'
          - name: Checkout Codes
            uses: actions/checkout@v4
          - name : Build The Server Binary 
            run: |
             pwd
             chmod +x ./build.sh
             ./build.sh
             docker --version
          - name: SET version to gitenv
            run: echo "deployversion=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          - name: Build New Docker Image
            run : |
             docker build . -t muhammadolammi/naijalocationserver:latest -t muhammadolammi/naijalocationserver:'${{ env.deployversion}}'
             docker image ls 
          - name: Log in To docker 
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          - name: Push Docker images
            run: |
             docker push  muhammadolammi/muhammaddevback --all-tags
          

    # deploy:
    #   needs: build 
    #   name: Deploying to ec2
    #   runs-on: ubuntu-latest
    #   steps: 
    #     #remember to remove checkout and secret decrypt duplicates
    #     - name: Checkout Codes
    #       uses: actions/checkout@v4
    #     - run: |
    #         mkdir secrets
    #         gpg --quiet --batch --yes --decrypt --passphrase="$gpgkey" --output secrets/key.pem key.pem.gpg
    #         chmod 400 "secrets/serverpem.pem"
           
    #     - name: Pull docker image
    #       run: |
    #        ssh -o StrictHostKeyChecking=No -tt -i "secrets/key.pem" '${{secrets.SERVER_IP}}' 'sudo docker pull muhammadolammi/muhammaddevback:latest'
    #     - name: Stop docker container 
    #       run: |
    #         ssh -o StrictHostKeyChecking=No -tt -i "secrets/key.pem" '${{secrets.SERVER_IP}}' 'sudo docker stop backend || true'
    #         ssh -o StrictHostKeyChecking=No -tt -i "secrets/key.pem" '${{secrets.SERVER_IP}}' 'sudo docker rm beackend || true'
    #     - name: Run New Container
    #       run: |
    #          ssh -o StrictHostKeyChecking=No -tt -i "secrets/key.pem" '${{secrets.SERVER_IP}}' 'sudo docker run --name backend -d  -e PORT=8080 -e API_KEY='${{secrets.API_KEY}}' DB_URL='${{secrets.DB_URL}}'  muhammadolammi/muhammaddevback:latest'
